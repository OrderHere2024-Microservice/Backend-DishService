scalar BigDecimal
scalar Long

type Query {

    getCategories(restaurantId: Int!): [Category]
    findIngredientsByDishID(dishID: Int!): [GetIngredientDTO]
    getIngredientById(id: Int!): Ingredient

    getDishes(restaurantId: Int!, page: Int = 1, size: Int = 10, sort: String = "category", order: String = "asc"): DishPage
    getDishesByCategory(restaurantId: Int!, categoryId: Int!): [DishGetDto]
}

type Mutation {

    createCategory(categoryPostDTO: CategoryInput!): Category

    createLinkIngredientDish(postIngredientDTO: PostIngredientInput!): Int!
    deleteIngredientLink(deleteIngredientDTO: DeleteIngredientInput!): String!
    updateIngredient(updateIngredientDTO: UpdateIngredientInput!): Ingredient!
    deleteDish(dishId: Int!): Boolean
}

type Category {
    categoryId: Int
    restaurantId: Int!
    categoryName: String!
    createdTime: String
    updatedTime: String
}

input CategoryInput {
    restaurantId: Int!
    categoryName: String!
}

type Ingredient {
    ingredientId: Int!
    name: String!
}

type GetIngredientDTO {
    linkIngredientDishId: Int!
    dishId: Int!
    ingredientId: Int!
    quantityValue: BigDecimal!
    quantityUnit: String!
}

input PostIngredientInput {
    dishId: Int!
    name: String!
    unit: String!
    quantityValue: BigDecimal!
}

input UpdateIngredientInput {
    ingredientId: Int!
    name: String!
}

input DeleteIngredientInput {
    dishId: Int!
    ingredientId: Int!
}

type DishPage {
    data: [DishGetDto]
    totalItems: Long
    totalPages: Int
    currentPage: Int
}

type DishGetDto {
    dishId: Int
    dishName: String
    description: String
    price: BigDecimal
    imageUrl: String
    rating: BigDecimal
    restaurantId: Int
    availability: Boolean
    categoryId: Int
    categoryName: String
}